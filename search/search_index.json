{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Using Tasker on Android to Run API Commands automatically","text":""},{"location":"#summary","title":"Summary","text":"<p>Today, I\u2019m going to explain how to test the RICOH THETA X model using the free mobile app HTTP Request Shortcuts and the paid mobile app Tasker for $3.49. With this combination you are able to take pictures and configure camera settings in the field with a custom workflow using an Android phone or tablet where you may be putting the camera in a car with one hand and holding the phone in your other hand. Similar apps are also available for iOS.</p> <p>This may be an easy way to prototype workflows specific to the industry you are working in, before doing final development on your app.</p> <p>To send HTTP Requests with HTTP Request Shortcuts I followed this article Using the THETA Web API without programming (Remote photo app) and if you need further information to reference I have an article testing the RICOH THETA Web API with HTTP Requests Shortcuts here Testing RICOH THETA Web API via Android Mobile App.</p> <p>Tasker is going to be used to execute a set of API commands automatically from HTTP Request Shortcuts and group them together so we can organize a set of custom API requests into one group and press one button to set them off sequentially. We can also set that group of commands from tasker into a home screen shortcut!</p>"},{"location":"#camera","title":"Camera","text":"<pre><code>Name: RICOH THETA X\nFirmware: 1.41.0\n\nReset camera\n    Can be done through LCD on camera or using the API\n\nDelete all media on camera\n    Can use USB cable, connect to Windows, delete through Windows explorer\n</code></pre>"},{"location":"#device-connected-to-camera","title":"Device connected to Camera","text":"<pre><code>Device: Samsung Galaxy Tab A8\nModel Name: SM-X200\nAndroid Version: 13\n</code></pre>"},{"location":"#apps-used","title":"Apps Used","text":"<ul> <li>Tasker</li> <li>HTTP Request Shortcuts</li> </ul>"},{"location":"#general-steps","title":"General Steps","text":"<ol> <li> <p>Get Deep-linking URL from HTTP Shortcuts app</p> </li> <li> <p>Use Tasker App to Run Commands Sequentially</p> </li> <li> <p>Add Tasker Commands to Device Home Screen</p> </li> <li> <p>Exporting Task as Link to share with others</p> </li> </ol>"},{"location":"http-req-tut/","title":"Deep-Linking URL","text":"<ol> <li> <p>Enter the HTTP Shortcuts app and for a couple seconds hold down your API command, I'm doing theta info. </p> </li> <li> <p>Then press \u201cShow Info\u201d.</p> <p></p> </li> <li> <p>Copy the Deep-Linking URL </p> <p></p> </li> </ol>"},{"location":"tasker-tut/","title":"Run Tasker Commands","text":"<ol> <li>Enter the Tasker app and Go to the \u201cTasks\u201d tab and add a new Task and name it something like \u201cInfo and State\u201d</li> </ol> <ol> <li>In the Info and State Task add a new event</li> </ol> <ol> <li>In the bottom area of the popup where it says \u201cFilter\u201d type in \u201cBrowse\u201d and the \u201cBrowse URL\u201d option will show, press on that option.</li> </ol> <ol> <li>Paste the Deep-Linking URL that we copied earlier into the URL section. Optionally you can add a Label which you can think of as naming the Action and it does make it easier to view which actions or events are currently running.</li> </ol> <p>Press the Back arrow once done and now we\u2019ve successfully added our first Task to the list!</p> <p>Repeat steps 1-7 above to add more API commands to this one list.</p> <p>Notice: So far in this article I know that the Tasks automatically run when you add a \u201cWait 2 seconds\u201d between each execution. I still have to test if the tasks can run without any \u201cWait\u201d. Also as you can see in the screenshot below \u201cCaptureMode Image\u201d and \u201ctake pic\u201d are the actions I used the label option for.</p> <ol> <li>To Run the list of API commands press on the Run button in the bottom left of the Screen.</li> </ol> <p></p>"}]}